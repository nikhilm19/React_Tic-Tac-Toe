{"version":3,"sources":["Dialog.js","TitleBar.js","index.js"],"names":["AlertDialog","props","React","useState","open","setOpen","handleClose","console","log","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","winner","DialogContent","DialogContentText","DialogActions","Button","onClick","color","restart","autoFocus","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","Typography","variant","startIcon","size","href","styles","borderRadius","border","height","width","padding","label","textTransform","createMuiTheme","palette","primary","light","main","dark","secondary","typography","useNextVariants","Square","valueI","Component","Board","i","squares","this","state","slice","calculateWinner","xIsNext","setState","player","active","playerTurn","renderSquare","GameInfoStatus","status","indexOf","isDrawn","displayWinner","Game","history","Array","fill","stepNumber","step","length","concat","currentHistory","moves","map","move","desc","key","goBackTo","disableElevation","handleClick","withStyles","count","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17931287.chunk.js","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nexport default function AlertDialog(props) {\n  const [open, setOpen] = React.useState(true);\n\n  //setOpen(true);\n\n  //console.log(open);\n\n  const handleClickOpen = () => {\n    console.log(\"se open\");\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    console.log(\"se close\");\n    setOpen(false);\n  };\n\n  const startNewGame = () => {\n    setOpen(false);\n  };\n  //handleClickOpen();\n\n  //console.log(open);\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"game-finish-dialog--title\">{props.winner}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"game-finish-dialog--description\">\n            {\"Want to play another game?\"}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            No\n          </Button>\n          <Button onClick={props.restart} color=\"primary\" autoFocus>\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Tic Tac Toe\n          </Typography>\n\n          <Button\n            startIcon={<GitHubIcon />}\n            color=\"inherit\"\n            size=\"large\"\n            href=\"https://github.com/nikhilm19/React_Tic-Tac-Toe\"\n          >\n            Source\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\nimport DialogDemo from \"./Dialog\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport ButtonAppBar from \"./TitleBar\";\n\nconst styles = makeStyles({\n  root: {\n    \"border-radius\": \"20px\",\n\n    \"background-color\": \"#6a2c70\",\n\n    borderRadius: 10,\n    border: \"grey solid 2px\",\n    color: \"white\",\n    height: 140,\n    width: 140,\n    \"font-size\": \"140px\",\n    padding: \"0 30px\",\n  },\n  label: {\n    textTransform: \"capitalize\",\n  },\n  \"root:hover\": {\n    \"background-color\": \"white\",\n  },\n});\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: \"#fff\",\n      main: \"rgb(23, 105, 170)\",\n      dark: \"#000\",\n    },\n    secondary: {\n      main: \"#f44336\",\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nfunction Square(props) {\n  const classes = styles();\n  return (\n    <button\n      className={\"square \" + props.valueI + \"-Player\"}\n      onClick={props.onClick}\n    >\n      {props.valueI}\n    </button>\n  );\n}\n\nclass NewGameButton extends React.Component {\n  render() {\n    return <button className=\"newgame\">New Game</button>;\n  }\n}\n\nclass Board extends React.Component {\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      //Ignore the click if winner or square is filled\n\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n\n    console.log(squares[i]);\n\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  renderSquare(i) {\n    // console.log(this.props.squares[i]);\n    return (\n      <Square\n        valueI={this.props.squares[i]}\n        player={\n          this.props.active === i && this.props.squares\n            ? this.props.playerTurn\n            : \"\"\n        }\n        onClick={() => {\n          this.props.onClick(i);\n        }}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"board-container\">\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass GameInfoStatus extends React.Component {\n  displayWinner() {\n    console.log(\"egt\");\n\n    if (this.props.status.indexOf(\"Winner\") !== -1)\n      return (\n        <DialogDemo\n          winner={this.props.status}\n          open={true}\n          restart={this.props.restart}\n        />\n      );\n\n    if (this.props.isDrawn === true) {\n      return (\n        <DialogDemo\n          winner={this.props.status}\n          open={true}\n          restart={this.props.restart}\n        />\n      );\n    } else return <div className=\"game-info--status\">{this.props.status}</div>;\n\n    // alert(this.props.status);\n  }\n  render() {\n    return this.displayWinner();\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [\n        {\n          squares: Array(9).fill(null),\n        },\n      ],\n      xIsNext: true,\n      stepNumber: 0,\n    };\n  }\n\n  goBackTo(step) {\n    if (step > this.state.stepNumber) step = this.state.stepNumber;\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0,\n      history: this.state.history.slice(0, step + 1),\n    });\n  }\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1); // Throw away future history, if went back\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n\n    console.log(squares);\n    this.setState({\n      history: history.concat([\n        {\n          squares: squares,\n        },\n      ]),\n\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n      active: i,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const currentHistory = history[this.state.stepNumber];\n\n    const winner = calculateWinner(currentHistory.squares);\n\n    const moves = history.map((step, move) => {\n      const desc = move ? \"Visit move #\" + move : \"Restart\";\n\n      return (\n        <li className=\"moves\" key={move}>\n          <Button\n            className=\"moves--element\"\n            onClick={() => this.goBackTo(move)}\n            variant=\"contained\"\n            color=\"primary\"\n            disableElevation\n          >\n            {desc}\n          </Button>\n        </li>\n      );\n    });\n\n    var status,\n      isDrawn = false;\n    if (winner === \"X\" || winner === \"O\") {\n      status = \"Winner: \" + winner;\n\n      console.log(status);\n\n      /*this.setState({\n        stepNumber: 0,\n        xIsNext: true,\n        history: this.state.history.slice(0, 1),\n      });*/\n    } else if (winner === -1) {\n      status = \"Draw\";\n      isDrawn = true;\n      console.log(status);\n    } else {\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n\n    return (\n      <div>\n        <div className=\"navbar\">\n          <ButtonAppBar />\n        </div>\n\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board\n              squares={currentHistory.squares}\n              onClick={(i) => this.handleClick(i)}\n              active={this.state.active}\n              playerTurn={this.state.xIsNext ? \"X-Player\" : \"O-Player\"}\n            />\n          </div>\n          <div className=\"game-info\">\n            <GameInfoStatus\n              status={\n                winner == \"X\" || winner == \"O\"\n                  ? \"Winner: Player \" + winner\n                  : status\n              }\n              isDrawn={isDrawn}\n              restart={() => this.goBackTo(0)}\n            />\n            <ol>{moves}</ol>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\nexport default withStyles(styles)(Game);\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n\nfunction calculateWinner(squares) {\n  let draw = true;\n\n  let count = 0;\n\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  for (var i = 0; i < 9; i++) {\n    if (squares[i] !== null) count++;\n  }\n  if (count == 9) return -1;\n  return null;\n}\n"],"sourceRoot":""}